apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.2"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def excludes = [
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/Test*.*',
            'android/**/*.*'
    ]

    def javaClasses = fileTree(dir: "${project.buildDir}/intermediates/classes/debug", excludes: excludes)
    classDirectories = fileTree([javaClasses])

    sourceDirectories = files([
            "$project.projectDir/src/main/java"
    ])

    executionData = files([
            "${project.buildDir}/jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ])
}

//project.afterEvaluate {
//    android.applicationVariants.all { variant ->
//        def variantName = variant.name
//        def testTaskName = "test${variantName.capitalize()}UnitTest"
//
//        tasks.create(name: "${testTaskName}Coverage", type: JacocoReport, dependsOn: "$testTaskName") {
//            group = "Reporting"
//            description = "Generate Jacoco coverage reports for the ${variantName.capitalize()} build."
//
//            reports {
//                html.enabled = true
//                xml.enabled = true
//            }
//
//            def excludes = [
//                    '**/R.class',
//                    '**/R$*.class',
//                    '**/BuildConfig.*',
//                    '**/Manifest*.*',
//                    '**/Test*.*',
//                    'android/**/*.*'
//            ]
//            def javaClasses = fileTree(dir: variant.javaCompiler.destinationDir, excludes: excludes)
//            classDirectories = files([javaClasses])
//            sourceDirectories = files([
//                    "$project.projectDir/src/main/java"
//            ])
//
//            executionData = files("${project.buildDir}/jacoco/${testTaskName}.exec")
//        }
//    }
//}